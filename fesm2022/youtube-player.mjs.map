{"version":3,"file":"youtube-player.mjs","sources":["../../../../../k8-fastbuild-ST-46c76129e412/bin/src/youtube-player/youtube-player-placeholder.ts","../../../../../k8-fastbuild-ST-46c76129e412/bin/src/youtube-player/youtube-player.ts","../../../../../k8-fastbuild-ST-46c76129e412/bin/src/youtube-player/youtube-module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\n\n/**  Quality of the placeholder image.  */\nexport type PlaceholderImageQuality = 'high' | 'standard' | 'low';\n\n@Component({\n  selector: 'youtube-player-placeholder',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  template: `\n    <button type=\"button\" class=\"youtube-player-placeholder-button\" [attr.aria-label]=\"buttonLabel\">\n      <svg\n        height=\"100%\"\n        version=\"1.1\"\n        viewBox=\"0 0 68 48\"\n        focusable=\"false\"\n        aria-hidden=\"true\">\n        <path d=\"M66.52,7.74c-0.78-2.93-2.49-5.41-5.42-6.19C55.79,.13,34,0,34,0S12.21,.13,6.9,1.55 C3.97,2.33,2.27,4.81,1.48,7.74C0.06,13.05,0,24,0,24s0.06,10.95,1.48,16.26c0.78,2.93,2.49,5.41,5.42,6.19 C12.21,47.87,34,48,34,48s21.79-0.13,27.1-1.55c2.93-0.78,4.64-3.26,5.42-6.19C67.94,34.95,68,24,68,24S67.94,13.05,66.52,7.74z\" fill=\"#f00\"></path>\n        <path d=\"M 45,24 27,14 27,34\" fill=\"#fff\"></path>\n      </svg>\n    </button>\n  `,\n  styleUrl: 'youtube-player-placeholder.css',\n  host: {\n    'class': 'youtube-player-placeholder',\n    '[class.youtube-player-placeholder-loading]': 'isLoading',\n    '[style.background-image]': '_getBackgroundImage()',\n    '[style.width.px]': 'width',\n    '[style.height.px]': 'height',\n  },\n})\nexport class YouTubePlayerPlaceholder {\n  /** ID of the video for which to show the placeholder. */\n  @Input() videoId: string;\n\n  /** Width of the video for which to show the placeholder. */\n  @Input() width: number;\n\n  /** Height of the video for which to show the placeholder. */\n  @Input() height: number;\n\n  /** Whether the video is currently being loaded. */\n  @Input() isLoading: boolean;\n\n  /** Accessible label for the play button. */\n  @Input() buttonLabel: string;\n\n  /** Quality of the placeholder image. */\n  @Input() quality: PlaceholderImageQuality;\n\n  /** Gets the background image showing the placeholder. */\n  protected _getBackgroundImage(): string | undefined {\n    let url: string;\n\n    if (this.quality === 'low') {\n      url = `https://i.ytimg.com/vi/${this.videoId}/hqdefault.jpg`;\n    } else if (this.quality === 'high') {\n      url = `https://i.ytimg.com/vi/${this.videoId}/maxresdefault.jpg`;\n    } else {\n      url = `https://i.ytimg.com/vi_webp/${this.videoId}/sddefault.webp`;\n    }\n\n    return `url(${url})`;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"youtube\" preserve=\"true\" />\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  PLATFORM_ID,\n  OnChanges,\n  SimpleChanges,\n  booleanAttribute,\n  numberAttribute,\n  InjectionToken,\n  inject,\n  CSP_NONCE,\n  ChangeDetectorRef,\n  AfterViewInit,\n  EventEmitter,\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\nimport {Observable, of as observableOf, Subject, BehaviorSubject, fromEventPattern} from 'rxjs';\nimport {takeUntil, switchMap} from 'rxjs/operators';\nimport {PlaceholderImageQuality, YouTubePlayerPlaceholder} from './youtube-player-placeholder';\n\ndeclare global {\n  interface Window {\n    YT: typeof YT | undefined;\n    onYouTubeIframeAPIReady: (() => void) | undefined;\n  }\n}\n\n/** Injection token used to configure the `YouTubePlayer`. */\nexport const YOUTUBE_PLAYER_CONFIG = new InjectionToken<YouTubePlayerConfig>(\n  'YOUTUBE_PLAYER_CONFIG',\n);\n\n/** Object that can be used to configure the `YouTubePlayer`. */\nexport interface YouTubePlayerConfig {\n  /** Whether to load the YouTube iframe API automatically. Defaults to `true`. */\n  loadApi?: boolean;\n\n  /**\n   * By default the player shows a placeholder image instead of loading the YouTube API which\n   * improves the initial page load performance. Use this option to disable the placeholder loading\n   * behavior globally. Defaults to `false`.\n   */\n  disablePlaceholder?: boolean;\n\n  /** Accessible label for the play button inside of the placeholder. */\n  placeholderButtonLabel?: string;\n\n  /**\n   * Quality of the displayed placeholder image. Defaults to `standard`,\n   * because not all video have a high-quality placeholder.\n   */\n  placeholderImageQuality?: PlaceholderImageQuality;\n}\n\nexport const DEFAULT_PLAYER_WIDTH = 640;\nexport const DEFAULT_PLAYER_HEIGHT = 390;\n\n/**\n * Object used to store the state of the player if the\n * user tries to interact with the API before it has been loaded.\n */\ninterface PendingPlayerState {\n  playbackState?: PlayerState.PLAYING | PlayerState.PAUSED | PlayerState.CUED;\n  playbackRate?: number;\n  volume?: number;\n  muted?: boolean;\n  seek?: {seconds: number; allowSeekAhead: boolean};\n}\n\n/** Coercion function for time values. */\nfunction coerceTime(value: number | undefined): number | undefined {\n  return value == null ? value : numberAttribute(value, 0);\n}\n\n/**\n * Equivalent of `YT.PlayerState` which we can't use, because it's meant to\n * be read off the `window` which we can't do before the API has been loaded.\n */\nenum PlayerState {\n  UNSTARTED = -1,\n  ENDED = 0,\n  PLAYING = 1,\n  PAUSED = 2,\n  BUFFERING = 3,\n  CUED = 5,\n}\n\n/**\n * Angular component that renders a YouTube player via the YouTube player\n * iframe API.\n * @see https://developers.google.com/youtube/iframe_api_reference\n */\n@Component({\n  selector: 'youtube-player',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  imports: [YouTubePlayerPlaceholder],\n  styleUrl: 'youtube-player.css',\n  template: `\n    @if (_shouldShowPlaceholder()) {\n      <youtube-player-placeholder\n        [videoId]=\"videoId!\"\n        [width]=\"width\"\n        [height]=\"height\"\n        [isLoading]=\"_isLoading\"\n        [buttonLabel]=\"placeholderButtonLabel\"\n        [quality]=\"placeholderImageQuality\"\n        (click)=\"_load(true)\"/>\n    }\n    <div [style.display]=\"_shouldShowPlaceholder() ? 'none' : ''\">\n      <div #youtubeContainer></div>\n    </div>\n  `,\n})\nexport class YouTubePlayer implements AfterViewInit, OnChanges, OnDestroy {\n  private _ngZone = inject(NgZone);\n  private readonly _nonce = inject(CSP_NONCE, {optional: true});\n  private readonly _changeDetectorRef = inject(ChangeDetectorRef);\n  private readonly _elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  private _player: YT.Player | undefined;\n  private _pendingPlayer: YT.Player | undefined;\n  private _existingApiReadyCallback: (() => void) | undefined;\n  private _pendingPlayerState: PendingPlayerState | undefined;\n  private readonly _destroyed = new Subject<void>();\n  private readonly _playerChanges = new BehaviorSubject<YT.Player | undefined>(undefined);\n  protected _isLoading = false;\n  protected _hasPlaceholder = true;\n\n  /** Whether we're currently rendering inside a browser. */\n  private readonly _isBrowser: boolean;\n\n  /** YouTube Video ID to view */\n  @Input()\n  videoId: string | undefined;\n\n  /** Height of video player */\n  @Input({transform: numberAttribute})\n  get height(): number {\n    return this._height;\n  }\n  set height(height: number | undefined) {\n    this._height = height == null || isNaN(height) ? DEFAULT_PLAYER_HEIGHT : height;\n  }\n  private _height = DEFAULT_PLAYER_HEIGHT;\n\n  /** Width of video player */\n  @Input({transform: numberAttribute})\n  get width(): number {\n    return this._width;\n  }\n  set width(width: number | undefined) {\n    this._width = width == null || isNaN(width) ? DEFAULT_PLAYER_WIDTH : width;\n  }\n  private _width = DEFAULT_PLAYER_WIDTH;\n\n  /** The moment when the player is supposed to start playing */\n  @Input({transform: coerceTime})\n  startSeconds: number | undefined;\n\n  /** The moment when the player is supposed to stop playing */\n  @Input({transform: coerceTime})\n  endSeconds: number | undefined;\n\n  /** The suggested quality of the player */\n  @Input()\n  suggestedQuality: YT.SuggestedVideoQuality | undefined;\n\n  /**\n   * Extra parameters used to configure the player. See:\n   * https://developers.google.com/youtube/player_parameters.html?playerVersion=HTML5#Parameters\n   */\n  @Input()\n  playerVars: YT.PlayerVars | undefined;\n\n  /** Whether cookies inside the player have been disabled. */\n  @Input({transform: booleanAttribute})\n  disableCookies: boolean = false;\n\n  /** Whether to automatically load the YouTube iframe API. Defaults to `true`. */\n  @Input({transform: booleanAttribute})\n  loadApi: boolean;\n\n  /**\n   * By default the player shows a placeholder image instead of loading the YouTube API which\n   * improves the initial page load performance. This input allows for the behavior to be disabled.\n   */\n  @Input({transform: booleanAttribute})\n  disablePlaceholder: boolean = false;\n\n  /**\n   * Whether the iframe will attempt to load regardless of the status of the api on the\n   * page. Set this to true if you don't want the `onYouTubeIframeAPIReady` field to be\n   * set on the global window.\n   */\n  @Input({transform: booleanAttribute}) showBeforeIframeApiLoads: boolean = false;\n\n  /** Accessible label for the play button inside of the placeholder. */\n  @Input() placeholderButtonLabel: string;\n\n  /**\n   * Quality of the displayed placeholder image. Defaults to `standard`,\n   * because not all video have a high-quality placeholder.\n   */\n  @Input() placeholderImageQuality: PlaceholderImageQuality;\n\n  // Note: ready event can't go through the lazy emitter, because it\n  // happens before the `_playerChanges` stream emits the new player.\n\n  /** Emits when the player is initialized. */\n  @Output() readonly ready: Observable<YT.PlayerEvent> = new EventEmitter<YT.PlayerEvent>();\n\n  /** Emits when the state of the player has changed. */\n  @Output() readonly stateChange: Observable<YT.OnStateChangeEvent> =\n    this._getLazyEmitter<YT.OnStateChangeEvent>('onStateChange');\n\n  /** Emits when there's an error while initializing the player. */\n  @Output() readonly error: Observable<YT.OnErrorEvent> =\n    this._getLazyEmitter<YT.OnErrorEvent>('onError');\n\n  /** Emits when the underlying API of the player has changed. */\n  @Output() readonly apiChange: Observable<YT.PlayerEvent> =\n    this._getLazyEmitter<YT.PlayerEvent>('onApiChange');\n\n  /** Emits when the playback quality has changed. */\n  @Output() readonly playbackQualityChange: Observable<YT.OnPlaybackQualityChangeEvent> =\n    this._getLazyEmitter<YT.OnPlaybackQualityChangeEvent>('onPlaybackQualityChange');\n\n  /** Emits when the playback rate has changed. */\n  @Output() readonly playbackRateChange: Observable<YT.OnPlaybackRateChangeEvent> =\n    this._getLazyEmitter<YT.OnPlaybackRateChangeEvent>('onPlaybackRateChange');\n\n  /** The element that will be replaced by the iframe. */\n  @ViewChild('youtubeContainer', {static: true})\n  youtubeContainer: ElementRef<HTMLElement>;\n\n  constructor(...args: unknown[]);\n\n  constructor() {\n    const platformId = inject<Object>(PLATFORM_ID);\n    const config = inject(YOUTUBE_PLAYER_CONFIG, {optional: true});\n    this.loadApi = config?.loadApi ?? true;\n    this.disablePlaceholder = !!config?.disablePlaceholder;\n    this.placeholderButtonLabel = config?.placeholderButtonLabel || 'Play video';\n    this.placeholderImageQuality = config?.placeholderImageQuality || 'standard';\n    this._isBrowser = isPlatformBrowser(platformId);\n  }\n\n  ngAfterViewInit() {\n    this._conditionallyLoad();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this._shouldRecreatePlayer(changes)) {\n      this._conditionallyLoad();\n    } else if (this._player) {\n      if (changes['width'] || changes['height']) {\n        this._setSize();\n      }\n\n      if (changes['suggestedQuality']) {\n        this._setQuality();\n      }\n\n      if (changes['startSeconds'] || changes['endSeconds'] || changes['suggestedQuality']) {\n        this._cuePlayer();\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._pendingPlayer?.destroy();\n\n    if (this._player) {\n      this._player.destroy();\n      window.onYouTubeIframeAPIReady = this._existingApiReadyCallback;\n    }\n\n    this._playerChanges.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#playVideo */\n  playVideo() {\n    if (this._player) {\n      this._player.playVideo();\n    } else {\n      this._getPendingState().playbackState = PlayerState.PLAYING;\n      this._load(true);\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#pauseVideo */\n  pauseVideo() {\n    if (this._player) {\n      this._player.pauseVideo();\n    } else {\n      this._getPendingState().playbackState = PlayerState.PAUSED;\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#stopVideo */\n  stopVideo() {\n    if (this._player) {\n      this._player.stopVideo();\n    } else {\n      // It seems like YouTube sets the player to CUED when it's stopped.\n      this._getPendingState().playbackState = PlayerState.CUED;\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#seekTo */\n  seekTo(seconds: number, allowSeekAhead: boolean) {\n    if (this._player) {\n      this._player.seekTo(seconds, allowSeekAhead);\n    } else {\n      this._getPendingState().seek = {seconds, allowSeekAhead};\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#mute */\n  mute() {\n    if (this._player) {\n      this._player.mute();\n    } else {\n      this._getPendingState().muted = true;\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#unMute */\n  unMute() {\n    if (this._player) {\n      this._player.unMute();\n    } else {\n      this._getPendingState().muted = false;\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#isMuted */\n  isMuted(): boolean {\n    if (this._player) {\n      return this._player.isMuted();\n    }\n\n    if (this._pendingPlayerState) {\n      return !!this._pendingPlayerState.muted;\n    }\n\n    return false;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#setVolume */\n  setVolume(volume: number) {\n    if (this._player) {\n      this._player.setVolume(volume);\n    } else {\n      this._getPendingState().volume = volume;\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getVolume */\n  getVolume(): number {\n    if (this._player) {\n      return this._player.getVolume();\n    }\n\n    if (this._pendingPlayerState && this._pendingPlayerState.volume != null) {\n      return this._pendingPlayerState.volume;\n    }\n\n    return 0;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate */\n  setPlaybackRate(playbackRate: number) {\n    if (this._player) {\n      return this._player.setPlaybackRate(playbackRate);\n    } else {\n      this._getPendingState().playbackRate = playbackRate;\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getPlaybackRate */\n  getPlaybackRate(): number {\n    if (this._player) {\n      return this._player.getPlaybackRate();\n    }\n\n    if (this._pendingPlayerState && this._pendingPlayerState.playbackRate != null) {\n      return this._pendingPlayerState.playbackRate;\n    }\n\n    return 0;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getAvailablePlaybackRates */\n  getAvailablePlaybackRates(): number[] {\n    return this._player ? this._player.getAvailablePlaybackRates() : [];\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getVideoLoadedFraction */\n  getVideoLoadedFraction(): number {\n    return this._player ? this._player.getVideoLoadedFraction() : 0;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getPlayerState */\n  getPlayerState(): YT.PlayerState | undefined {\n    if (!this._isBrowser || !window.YT) {\n      return undefined;\n    }\n\n    if (this._player) {\n      return this._player.getPlayerState();\n    }\n\n    if (this._pendingPlayerState && this._pendingPlayerState.playbackState != null) {\n      return this._pendingPlayerState.playbackState;\n    }\n\n    return PlayerState.UNSTARTED;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getCurrentTime */\n  getCurrentTime(): number {\n    if (this._player) {\n      return this._player.getCurrentTime();\n    }\n\n    if (this._pendingPlayerState && this._pendingPlayerState.seek) {\n      return this._pendingPlayerState.seek.seconds;\n    }\n\n    return 0;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getPlaybackQuality */\n  getPlaybackQuality(): YT.SuggestedVideoQuality {\n    return this._player ? this._player.getPlaybackQuality() : 'default';\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getAvailableQualityLevels */\n  getAvailableQualityLevels(): YT.SuggestedVideoQuality[] {\n    return this._player ? this._player.getAvailableQualityLevels() : [];\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getDuration */\n  getDuration(): number {\n    return this._player ? this._player.getDuration() : 0;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getVideoUrl */\n  getVideoUrl(): string {\n    return this._player ? this._player.getVideoUrl() : '';\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getVideoEmbedCode */\n  getVideoEmbedCode(): string {\n    return this._player ? this._player.getVideoEmbedCode() : '';\n  }\n\n  /**\n   * Attempts to put the player into fullscreen mode, depending on browser support.\n   * @param options Options controlling how the element behaves in fullscreen mode.\n   */\n  async requestFullscreen(options?: FullscreenOptions): Promise<void> {\n    // Note that we do this on the host, rather than the iframe, because it allows us to handle the\n    // placeholder in fullscreen mode. Null check the method since it's not supported everywhere.\n    const element = this._elementRef.nativeElement;\n    return element.requestFullscreen\n      ? element.requestFullscreen(options)\n      : Promise.reject(new Error('Fullscreen API not supported by browser.'));\n  }\n\n  /**\n   * Loads the YouTube API and sets up the player.\n   * @param playVideo Whether to automatically play the video once the player is loaded.\n   */\n  protected _load(playVideo: boolean) {\n    // Don't do anything if we're not in a browser environment.\n    if (!this._isBrowser) {\n      return;\n    }\n\n    if (!window.YT || !window.YT.Player) {\n      if (this.loadApi) {\n        this._isLoading = true;\n        loadApi(this._nonce);\n      } else if (this.showBeforeIframeApiLoads && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new Error(\n          'Namespace YT not found, cannot construct embedded youtube player. ' +\n            'Please install the YouTube Player API Reference for iframe Embeds: ' +\n            'https://developers.google.com/youtube/iframe_api_reference',\n        );\n      }\n\n      this._existingApiReadyCallback = window.onYouTubeIframeAPIReady;\n\n      window.onYouTubeIframeAPIReady = () => {\n        this._existingApiReadyCallback?.();\n        this._ngZone.run(() => this._createPlayer(playVideo));\n      };\n    } else {\n      this._createPlayer(playVideo);\n    }\n  }\n\n  /** Loads the player depending on the internal state of the component. */\n  private _conditionallyLoad() {\n    // If the placeholder isn't shown anymore, we have to trigger a load.\n    if (!this._shouldShowPlaceholder()) {\n      this._load(false);\n    } else if (this.playerVars?.autoplay === 1) {\n      // If it's an autoplaying video, we have to hide the placeholder and start playing.\n      this._load(true);\n    }\n  }\n\n  /** Whether to show the placeholder element. */\n  protected _shouldShowPlaceholder(): boolean {\n    if (this.disablePlaceholder) {\n      return false;\n    }\n\n    // Since we don't load the API on the server, we show the placeholder permanently.\n    if (!this._isBrowser) {\n      return true;\n    }\n\n    return this._hasPlaceholder && !!this.videoId && !this._player;\n  }\n\n  /** Gets an object that should be used to store the temporary API state. */\n  private _getPendingState(): PendingPlayerState {\n    if (!this._pendingPlayerState) {\n      this._pendingPlayerState = {};\n    }\n\n    return this._pendingPlayerState;\n  }\n\n  /**\n   * Determines whether a change in the component state\n   * requires the YouTube player to be recreated.\n   */\n  private _shouldRecreatePlayer(changes: SimpleChanges): boolean {\n    const change =\n      changes['videoId'] ||\n      changes['playerVars'] ||\n      changes['disableCookies'] ||\n      changes['disablePlaceholder'];\n    return !!change && !change.isFirstChange();\n  }\n\n  /**\n   * Creates a new YouTube player and destroys the existing one.\n   * @param playVideo Whether to play the video once it loads.\n   */\n  private _createPlayer(playVideo: boolean) {\n    this._player?.destroy();\n    this._pendingPlayer?.destroy();\n\n    // A player can't be created if the API isn't loaded,\n    // or there isn't a video or playlist to be played.\n    if (typeof YT === 'undefined' || (!this.videoId && !this.playerVars?.list)) {\n      return;\n    }\n\n    // Important! We need to create the Player object outside of the `NgZone`, because it kicks\n    // off a 250ms setInterval which will continually trigger change detection if we don't.\n    const player = this._ngZone.runOutsideAngular(\n      () =>\n        new YT.Player(this.youtubeContainer.nativeElement, {\n          videoId: this.videoId,\n          host: this.disableCookies ? 'https://www.youtube-nocookie.com' : undefined,\n          width: this.width,\n          height: this.height,\n          // Calling `playVideo` on load doesn't appear to actually play\n          // the video so we need to trigger it through `playerVars` instead.\n          playerVars: playVideo ? {...(this.playerVars || {}), autoplay: 1} : this.playerVars,\n        }),\n    );\n\n    const whenReady = (event: YT.PlayerEvent) => {\n      // Only assign the player once it's ready, otherwise YouTube doesn't expose some APIs.\n      this._ngZone.run(() => {\n        this._isLoading = false;\n        this._hasPlaceholder = false;\n        this._player = player;\n        this._pendingPlayer = undefined;\n        player.removeEventListener('onReady', whenReady);\n        this._playerChanges.next(player);\n        (this.ready as EventEmitter<YT.PlayerEvent>).emit(event);\n        this._setSize();\n        this._setQuality();\n\n        if (this._pendingPlayerState) {\n          this._applyPendingPlayerState(player, this._pendingPlayerState);\n          this._pendingPlayerState = undefined;\n        }\n\n        // Only cue the player when it either hasn't started yet or it's cued,\n        // otherwise cuing it can interrupt a player with autoplay enabled.\n        const state = player.getPlayerState();\n        if (state === PlayerState.UNSTARTED || state === PlayerState.CUED || state == null) {\n          this._cuePlayer();\n        } else if (playVideo && this.startSeconds && this.startSeconds > 0) {\n          // We have to use `seekTo` when `startSeconds` are specified to simulate it playing from\n          // a specific time. The \"proper\" way to do it would be to either go through `cueVideoById`\n          // or `playerVars.start`, but at the time of writing both end up resetting the video\n          // to the state as if the user hasn't interacted with it.\n          player.seekTo(this.startSeconds, true);\n        }\n\n        this._changeDetectorRef.markForCheck();\n      });\n    };\n\n    this._pendingPlayer = player;\n    player.addEventListener('onReady', whenReady);\n  }\n\n  /** Applies any state that changed before the player was initialized. */\n  private _applyPendingPlayerState(player: YT.Player, pendingState: PendingPlayerState): void {\n    const {playbackState, playbackRate, volume, muted, seek} = pendingState;\n\n    switch (playbackState) {\n      case PlayerState.PLAYING:\n        player.playVideo();\n        break;\n      case PlayerState.PAUSED:\n        player.pauseVideo();\n        break;\n      case PlayerState.CUED:\n        player.stopVideo();\n        break;\n    }\n\n    if (playbackRate != null) {\n      player.setPlaybackRate(playbackRate);\n    }\n\n    if (volume != null) {\n      player.setVolume(volume);\n    }\n\n    if (muted != null) {\n      muted ? player.mute() : player.unMute();\n    }\n\n    if (seek != null) {\n      player.seekTo(seek.seconds, seek.allowSeekAhead);\n    }\n  }\n\n  /** Cues the player based on the current component state. */\n  private _cuePlayer() {\n    if (this._player && this.videoId) {\n      this._player.cueVideoById({\n        videoId: this.videoId,\n        startSeconds: this.startSeconds,\n        endSeconds: this.endSeconds,\n        suggestedQuality: this.suggestedQuality,\n      });\n    }\n  }\n\n  /** Sets the player's size based on the current input values. */\n  private _setSize() {\n    this._player?.setSize(this.width, this.height);\n  }\n\n  /** Sets the player's quality based on the current input values. */\n  private _setQuality() {\n    if (this._player && this.suggestedQuality) {\n      this._player.setPlaybackQuality(this.suggestedQuality);\n    }\n  }\n\n  /** Gets an observable that adds an event listener to the player when a user subscribes to it. */\n  private _getLazyEmitter<T extends YT.PlayerEvent>(name: keyof YT.Events): Observable<T> {\n    // Start with the stream of players. This way the events will be transferred\n    // over to the new player if it gets swapped out under-the-hood.\n    return this._playerChanges.pipe(\n      // Switch to the bound event. `switchMap` ensures that the old event is removed when the\n      // player is changed. If there's no player, return an observable that never emits.\n      switchMap(player => {\n        return player\n          ? fromEventPattern<T>(\n              listener => {\n                player.addEventListener(name, listener);\n              },\n              listener => {\n                // The API seems to throw when we try to unbind from a destroyed player and it doesn't\n                // expose whether the player has been destroyed so we have to wrap it in a try/catch to\n                // prevent the entire stream from erroring out.\n                try {\n                  player?.removeEventListener?.(name, listener);\n                } catch {}\n              },\n            )\n          : observableOf<T>();\n      }),\n      // By default we run all the API interactions outside the zone\n      // so we have to bring the events back in manually when they emit.\n      source =>\n        new Observable<T>(observer =>\n          source.subscribe({\n            next: value => this._ngZone.run(() => observer.next(value)),\n            error: error => observer.error(error),\n            complete: () => observer.complete(),\n          }),\n        ),\n      // Ensures that everything is cleared out on destroy.\n      takeUntil(this._destroyed),\n    );\n  }\n}\n\nlet apiLoaded = false;\n\n/** Loads the YouTube API from a specified URL only once. */\nfunction loadApi(nonce: string | null): void {\n  if (apiLoaded) {\n    return;\n  }\n\n  // We can use `document` directly here, because this logic doesn't run outside the browser.\n  const url = 'https://www.youtube.com/iframe_api';\n  const script = document.createElement('script');\n  const callback = (event: Event) => {\n    script.removeEventListener('load', callback);\n    script.removeEventListener('error', callback);\n\n    if (event.type === 'error') {\n      apiLoaded = false;\n\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.error(`Failed to load YouTube API from ${url}`);\n      }\n    }\n  };\n  script.addEventListener('load', callback);\n  script.addEventListener('error', callback);\n  (script as any).src = url;\n  script.async = true;\n\n  if (nonce) {\n    script.setAttribute('nonce', nonce);\n  }\n\n  // Set this immediately to true so we don't start loading another script\n  // while this one is pending. If loading fails, we'll flip it back to false.\n  apiLoaded = true;\n  document.body.appendChild(script);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {YouTubePlayer} from './youtube-player';\n\n@NgModule({\n  imports: [YouTubePlayer],\n  exports: [YouTubePlayer],\n})\nexport class YouTubePlayerModule {}\n"],"names":["observableOf"],"mappings":"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"}