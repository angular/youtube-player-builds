{"version":3,"file":"youtube-player.mjs","sources":["../../../../../../src/youtube-player/youtube-player.ts","../../../../../../src/youtube-player/youtube-module.ts","../../../../../../src/youtube-player/public-api.ts","../../../../../../src/youtube-player/index.ts","../../../../../../src/youtube-player/youtube-player_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// Workaround for: https://github.com/bazelbuild/rules_nodejs/issues/1265\n/// <reference types=\"youtube\" />\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  Inject,\n  PLATFORM_ID,\n} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\n\nimport {\n  combineLatest,\n  ConnectableObservable,\n  merge,\n  MonoTypeOperatorFunction,\n  Observable,\n  of as observableOf,\n  OperatorFunction,\n  pipe,\n  Subject,\n  of,\n  BehaviorSubject,\n  fromEventPattern,\n} from 'rxjs';\n\nimport {\n  combineLatest as combineLatestOp,\n  distinctUntilChanged,\n  filter,\n  map,\n  publish,\n  scan,\n  skipWhile,\n  startWith,\n  take,\n  takeUntil,\n  withLatestFrom,\n  switchMap,\n  tap,\n  mergeMap,\n} from 'rxjs/operators';\n\ndeclare global {\n  interface Window {\n    YT: typeof YT | undefined;\n    onYouTubeIframeAPIReady: (() => void) | undefined;\n  }\n}\n\nexport const DEFAULT_PLAYER_WIDTH = 640;\nexport const DEFAULT_PLAYER_HEIGHT = 390;\n\n// The native YT.Player doesn't expose the set videoId, but we need it for\n// convenience.\ninterface Player extends YT.Player {\n  videoId?: string;\n  playerVars?: YT.PlayerVars;\n}\n\n// The player isn't fully initialized when it's constructed.\n// The only field available is destroy and addEventListener.\ntype UninitializedPlayer = Pick<Player, 'videoId' | 'playerVars' | 'destroy' | 'addEventListener'>;\n\n/**\n * Object used to store the state of the player if the\n * user tries to interact with the API before it has been loaded.\n */\ninterface PendingPlayerState {\n  playbackState?: YT.PlayerState.PLAYING | YT.PlayerState.PAUSED | YT.PlayerState.CUED;\n  playbackRate?: number;\n  volume?: number;\n  muted?: boolean;\n  seek?: {seconds: number; allowSeekAhead: boolean};\n}\n\n/**\n * Angular component that renders a YouTube player via the YouTube player\n * iframe API.\n * @see https://developers.google.com/youtube/iframe_api_reference\n */\n@Component({\n  selector: 'youtube-player',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  // This div is *replaced* by the YouTube player embed.\n  template: '<div #youtubeContainer></div>',\n})\nexport class YouTubePlayer implements AfterViewInit, OnDestroy, OnInit {\n  /** Whether we're currently rendering inside a browser. */\n  private _isBrowser: boolean;\n  private readonly _youtubeContainer = new Subject<HTMLElement>();\n  private readonly _destroyed = new Subject<void>();\n  private _player: Player | undefined;\n  private _existingApiReadyCallback: (() => void) | undefined;\n  private _pendingPlayerState: PendingPlayerState | undefined;\n  private readonly _playerChanges = new BehaviorSubject<UninitializedPlayer | undefined>(undefined);\n\n  /** YouTube Video ID to view */\n  @Input()\n  get videoId(): string | undefined {\n    return this._videoId.value;\n  }\n  set videoId(videoId: string | undefined) {\n    this._videoId.next(videoId);\n  }\n  private readonly _videoId = new BehaviorSubject<string | undefined>(undefined);\n\n  /** Height of video player */\n  @Input()\n  get height(): number | undefined {\n    return this._height.value;\n  }\n  set height(height: number | undefined) {\n    this._height.next(height || DEFAULT_PLAYER_HEIGHT);\n  }\n  private readonly _height = new BehaviorSubject<number>(DEFAULT_PLAYER_HEIGHT);\n\n  /** Width of video player */\n  @Input()\n  get width(): number | undefined {\n    return this._width.value;\n  }\n  set width(width: number | undefined) {\n    this._width.next(width || DEFAULT_PLAYER_WIDTH);\n  }\n  private readonly _width = new BehaviorSubject<number>(DEFAULT_PLAYER_WIDTH);\n\n  /** The moment when the player is supposed to start playing */\n  @Input()\n  set startSeconds(startSeconds: number | undefined) {\n    this._startSeconds.next(startSeconds);\n  }\n  private readonly _startSeconds = new BehaviorSubject<number | undefined>(undefined);\n\n  /** The moment when the player is supposed to stop playing */\n  @Input()\n  set endSeconds(endSeconds: number | undefined) {\n    this._endSeconds.next(endSeconds);\n  }\n  private readonly _endSeconds = new BehaviorSubject<number | undefined>(undefined);\n\n  /** The suggested quality of the player */\n  @Input()\n  set suggestedQuality(suggestedQuality: YT.SuggestedVideoQuality | undefined) {\n    this._suggestedQuality.next(suggestedQuality);\n  }\n  private readonly _suggestedQuality = new BehaviorSubject<YT.SuggestedVideoQuality | undefined>(\n    undefined,\n  );\n\n  /**\n   * Extra parameters used to configure the player. See:\n   * https://developers.google.com/youtube/player_parameters.html?playerVersion=HTML5#Parameters\n   */\n  @Input()\n  get playerVars(): YT.PlayerVars | undefined {\n    return this._playerVars.value;\n  }\n  set playerVars(playerVars: YT.PlayerVars | undefined) {\n    this._playerVars.next(playerVars);\n  }\n  private _playerVars = new BehaviorSubject<YT.PlayerVars | undefined>(undefined);\n\n  /**\n   * Whether the iframe will attempt to load regardless of the status of the api on the\n   * page. Set this to true if you don't want the `onYouTubeIframeAPIReady` field to be\n   * set on the global window.\n   */\n  @Input() showBeforeIframeApiLoads: boolean | undefined;\n\n  /** Outputs are direct proxies from the player itself. */\n  @Output() readonly ready: Observable<YT.PlayerEvent> =\n    this._getLazyEmitter<YT.PlayerEvent>('onReady');\n\n  @Output() readonly stateChange: Observable<YT.OnStateChangeEvent> =\n    this._getLazyEmitter<YT.OnStateChangeEvent>('onStateChange');\n\n  @Output() readonly error: Observable<YT.OnErrorEvent> =\n    this._getLazyEmitter<YT.OnErrorEvent>('onError');\n\n  @Output() readonly apiChange: Observable<YT.PlayerEvent> =\n    this._getLazyEmitter<YT.PlayerEvent>('onApiChange');\n\n  @Output() readonly playbackQualityChange: Observable<YT.OnPlaybackQualityChangeEvent> =\n    this._getLazyEmitter<YT.OnPlaybackQualityChangeEvent>('onPlaybackQualityChange');\n\n  @Output() readonly playbackRateChange: Observable<YT.OnPlaybackRateChangeEvent> =\n    this._getLazyEmitter<YT.OnPlaybackRateChangeEvent>('onPlaybackRateChange');\n\n  /** The element that will be replaced by the iframe. */\n  @ViewChild('youtubeContainer')\n  youtubeContainer: ElementRef<HTMLElement>;\n\n  constructor(private _ngZone: NgZone, @Inject(PLATFORM_ID) platformId: Object) {\n    this._isBrowser = isPlatformBrowser(platformId);\n  }\n\n  ngOnInit() {\n    // Don't do anything if we're not in a browser environment.\n    if (!this._isBrowser) {\n      return;\n    }\n\n    let iframeApiAvailableObs: Observable<boolean> = observableOf(true);\n    if (!window.YT || !window.YT.Player) {\n      if (this.showBeforeIframeApiLoads && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new Error(\n          'Namespace YT not found, cannot construct embedded youtube player. ' +\n            'Please install the YouTube Player API Reference for iframe Embeds: ' +\n            'https://developers.google.com/youtube/iframe_api_reference',\n        );\n      }\n\n      const iframeApiAvailableSubject = new Subject<boolean>();\n      this._existingApiReadyCallback = window.onYouTubeIframeAPIReady;\n\n      window.onYouTubeIframeAPIReady = () => {\n        if (this._existingApiReadyCallback) {\n          this._existingApiReadyCallback();\n        }\n        this._ngZone.run(() => iframeApiAvailableSubject.next(true));\n      };\n      iframeApiAvailableObs = iframeApiAvailableSubject.pipe(take(1), startWith(false));\n    }\n\n    // An observable of the currently loaded player.\n    const playerObs = createPlayerObservable(\n      this._youtubeContainer,\n      this._videoId,\n      iframeApiAvailableObs,\n      this._width,\n      this._height,\n      this._playerVars,\n      this._ngZone,\n    ).pipe(\n      tap(player => {\n        // Emit this before the `waitUntilReady` call so that we can bind to\n        // events that happen as the player is being initialized (e.g. `onReady`).\n        this._playerChanges.next(player);\n      }),\n      waitUntilReady(player => {\n        // Destroy the player if loading was aborted so that we don't end up leaking memory.\n        if (!playerIsReady(player)) {\n          player.destroy();\n        }\n      }),\n      takeUntil(this._destroyed),\n      publish(),\n    );\n\n    // Set up side effects to bind inputs to the player.\n    playerObs.subscribe(player => {\n      this._player = player;\n\n      if (player && this._pendingPlayerState) {\n        this._initializePlayer(player, this._pendingPlayerState);\n      }\n\n      this._pendingPlayerState = undefined;\n    });\n\n    bindSizeToPlayer(playerObs, this._width, this._height);\n\n    bindSuggestedQualityToPlayer(playerObs, this._suggestedQuality);\n\n    bindCueVideoCall(\n      playerObs,\n      this._videoId,\n      this._startSeconds,\n      this._endSeconds,\n      this._suggestedQuality,\n      this._destroyed,\n    );\n\n    // After all of the subscriptions are set up, connect the observable.\n    (playerObs as ConnectableObservable<Player>).connect();\n  }\n\n  ngAfterViewInit() {\n    this._youtubeContainer.next(this.youtubeContainer.nativeElement);\n  }\n\n  ngOnDestroy() {\n    if (this._player) {\n      this._player.destroy();\n      window.onYouTubeIframeAPIReady = this._existingApiReadyCallback;\n    }\n\n    this._playerChanges.complete();\n    this._videoId.complete();\n    this._height.complete();\n    this._width.complete();\n    this._startSeconds.complete();\n    this._endSeconds.complete();\n    this._suggestedQuality.complete();\n    this._youtubeContainer.complete();\n    this._playerVars.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#playVideo */\n  playVideo() {\n    if (this._player) {\n      this._player.playVideo();\n    } else {\n      this._getPendingState().playbackState = YT.PlayerState.PLAYING;\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#pauseVideo */\n  pauseVideo() {\n    if (this._player) {\n      this._player.pauseVideo();\n    } else {\n      this._getPendingState().playbackState = YT.PlayerState.PAUSED;\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#stopVideo */\n  stopVideo() {\n    if (this._player) {\n      this._player.stopVideo();\n    } else {\n      // It seems like YouTube sets the player to CUED when it's stopped.\n      this._getPendingState().playbackState = YT.PlayerState.CUED;\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#seekTo */\n  seekTo(seconds: number, allowSeekAhead: boolean) {\n    if (this._player) {\n      this._player.seekTo(seconds, allowSeekAhead);\n    } else {\n      this._getPendingState().seek = {seconds, allowSeekAhead};\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#mute */\n  mute() {\n    if (this._player) {\n      this._player.mute();\n    } else {\n      this._getPendingState().muted = true;\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#unMute */\n  unMute() {\n    if (this._player) {\n      this._player.unMute();\n    } else {\n      this._getPendingState().muted = false;\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#isMuted */\n  isMuted(): boolean {\n    if (this._player) {\n      return this._player.isMuted();\n    }\n\n    if (this._pendingPlayerState) {\n      return !!this._pendingPlayerState.muted;\n    }\n\n    return false;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#setVolume */\n  setVolume(volume: number) {\n    if (this._player) {\n      this._player.setVolume(volume);\n    } else {\n      this._getPendingState().volume = volume;\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getVolume */\n  getVolume(): number {\n    if (this._player) {\n      return this._player.getVolume();\n    }\n\n    if (this._pendingPlayerState && this._pendingPlayerState.volume != null) {\n      return this._pendingPlayerState.volume;\n    }\n\n    return 0;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#setPlaybackRate */\n  setPlaybackRate(playbackRate: number) {\n    if (this._player) {\n      return this._player.setPlaybackRate(playbackRate);\n    } else {\n      this._getPendingState().playbackRate = playbackRate;\n    }\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getPlaybackRate */\n  getPlaybackRate(): number {\n    if (this._player) {\n      return this._player.getPlaybackRate();\n    }\n\n    if (this._pendingPlayerState && this._pendingPlayerState.playbackRate != null) {\n      return this._pendingPlayerState.playbackRate;\n    }\n\n    return 0;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getAvailablePlaybackRates */\n  getAvailablePlaybackRates(): number[] {\n    return this._player ? this._player.getAvailablePlaybackRates() : [];\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getVideoLoadedFraction */\n  getVideoLoadedFraction(): number {\n    return this._player ? this._player.getVideoLoadedFraction() : 0;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getPlayerState */\n  getPlayerState(): YT.PlayerState | undefined {\n    if (!this._isBrowser || !window.YT) {\n      return undefined;\n    }\n\n    if (this._player) {\n      return this._player.getPlayerState();\n    }\n\n    if (this._pendingPlayerState && this._pendingPlayerState.playbackState != null) {\n      return this._pendingPlayerState.playbackState;\n    }\n\n    return YT.PlayerState.UNSTARTED;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getCurrentTime */\n  getCurrentTime(): number {\n    if (this._player) {\n      return this._player.getCurrentTime();\n    }\n\n    if (this._pendingPlayerState && this._pendingPlayerState.seek) {\n      return this._pendingPlayerState.seek.seconds;\n    }\n\n    return 0;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getPlaybackQuality */\n  getPlaybackQuality(): YT.SuggestedVideoQuality {\n    return this._player ? this._player.getPlaybackQuality() : 'default';\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getAvailableQualityLevels */\n  getAvailableQualityLevels(): YT.SuggestedVideoQuality[] {\n    return this._player ? this._player.getAvailableQualityLevels() : [];\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getDuration */\n  getDuration(): number {\n    return this._player ? this._player.getDuration() : 0;\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getVideoUrl */\n  getVideoUrl(): string {\n    return this._player ? this._player.getVideoUrl() : '';\n  }\n\n  /** See https://developers.google.com/youtube/iframe_api_reference#getVideoEmbedCode */\n  getVideoEmbedCode(): string {\n    return this._player ? this._player.getVideoEmbedCode() : '';\n  }\n\n  /** Gets an object that should be used to store the temporary API state. */\n  private _getPendingState(): PendingPlayerState {\n    if (!this._pendingPlayerState) {\n      this._pendingPlayerState = {};\n    }\n\n    return this._pendingPlayerState;\n  }\n\n  /** Initializes a player from a temporary state. */\n  private _initializePlayer(player: YT.Player, state: PendingPlayerState): void {\n    const {playbackState, playbackRate, volume, muted, seek} = state;\n\n    switch (playbackState) {\n      case YT.PlayerState.PLAYING:\n        player.playVideo();\n        break;\n      case YT.PlayerState.PAUSED:\n        player.pauseVideo();\n        break;\n      case YT.PlayerState.CUED:\n        player.stopVideo();\n        break;\n    }\n\n    if (playbackRate != null) {\n      player.setPlaybackRate(playbackRate);\n    }\n\n    if (volume != null) {\n      player.setVolume(volume);\n    }\n\n    if (muted != null) {\n      muted ? player.mute() : player.unMute();\n    }\n\n    if (seek != null) {\n      player.seekTo(seek.seconds, seek.allowSeekAhead);\n    }\n  }\n\n  /** Gets an observable that adds an event listener to the player when a user subscribes to it. */\n  private _getLazyEmitter<T extends YT.PlayerEvent>(name: keyof YT.Events): Observable<T> {\n    // Start with the stream of players. This way the events will be transferred\n    // over to the new player if it gets swapped out under-the-hood.\n    return this._playerChanges.pipe(\n      // Switch to the bound event. `switchMap` ensures that the old event is removed when the\n      // player is changed. If there's no player, return an observable that never emits.\n      switchMap(player => {\n        return player\n          ? fromEventPattern<T>(\n              (listener: (event: T) => void) => {\n                player.addEventListener(name, listener);\n              },\n              (listener: (event: T) => void) => {\n                // The API seems to throw when we try to unbind from a destroyed player and it doesn't\n                // expose whether the player has been destroyed so we have to wrap it in a try/catch to\n                // prevent the entire stream from erroring out.\n                try {\n                  if ((player as Player).removeEventListener!) {\n                    (player as Player).removeEventListener(name, listener);\n                  }\n                } catch {}\n              },\n            )\n          : observableOf<T>();\n      }),\n      // By default we run all the API interactions outside the zone\n      // so we have to bring the events back in manually when they emit.\n      (source: Observable<T>) =>\n        new Observable<T>(observer =>\n          source.subscribe({\n            next: value => this._ngZone.run(() => observer.next(value)),\n            error: error => observer.error(error),\n            complete: () => observer.complete(),\n          }),\n        ),\n      // Ensures that everything is cleared out on destroy.\n      takeUntil(this._destroyed),\n    );\n  }\n}\n\n/** Listens to changes to the given width and height and sets it on the player. */\nfunction bindSizeToPlayer(\n  playerObs: Observable<YT.Player | undefined>,\n  widthObs: Observable<number>,\n  heightObs: Observable<number>,\n) {\n  return combineLatest([playerObs, widthObs, heightObs]).subscribe(\n    ([player, width, height]) => player && player.setSize(width, height),\n  );\n}\n\n/** Listens to changes from the suggested quality and sets it on the given player. */\nfunction bindSuggestedQualityToPlayer(\n  playerObs: Observable<YT.Player | undefined>,\n  suggestedQualityObs: Observable<YT.SuggestedVideoQuality | undefined>,\n) {\n  return combineLatest([playerObs, suggestedQualityObs]).subscribe(\n    ([player, suggestedQuality]) =>\n      player && suggestedQuality && player.setPlaybackQuality(suggestedQuality),\n  );\n}\n\n/**\n * Returns an observable that emits the loaded player once it's ready. Certain properties/methods\n * won't be available until the iframe finishes loading.\n * @param onAbort Callback function that will be invoked if the player loading was aborted before\n * it was able to complete. Can be used to clean up any loose references.\n */\nfunction waitUntilReady(\n  onAbort: (player: UninitializedPlayer) => void,\n): OperatorFunction<UninitializedPlayer | undefined, Player | undefined> {\n  return mergeMap(player => {\n    if (!player) {\n      return observableOf<Player | undefined>(undefined);\n    }\n    if (playerIsReady(player)) {\n      return observableOf(player as Player);\n    }\n\n    // Since removeEventListener is not on Player when it's initialized, we can't use fromEvent.\n    // The player is not initialized fully until the ready is called.\n    return new Observable<Player>(emitter => {\n      let aborted = false;\n      let resolved = false;\n      const onReady = (event: YT.PlayerEvent) => {\n        resolved = true;\n\n        if (!aborted) {\n          event.target.removeEventListener('onReady', onReady);\n          emitter.next(event.target);\n        }\n      };\n\n      player.addEventListener('onReady', onReady);\n\n      return () => {\n        aborted = true;\n\n        if (!resolved) {\n          onAbort(player);\n        }\n      };\n    }).pipe(take(1), startWith(undefined));\n  });\n}\n\n/** Create an observable for the player based on the given options. */\nfunction createPlayerObservable(\n  youtubeContainer: Observable<HTMLElement>,\n  videoIdObs: Observable<string | undefined>,\n  iframeApiAvailableObs: Observable<boolean>,\n  widthObs: Observable<number>,\n  heightObs: Observable<number>,\n  playerVarsObs: Observable<YT.PlayerVars | undefined>,\n  ngZone: NgZone,\n): Observable<UninitializedPlayer | undefined> {\n  const playerOptions = combineLatest([videoIdObs, playerVarsObs]).pipe(\n    withLatestFrom(combineLatest([widthObs, heightObs])),\n    map(([constructorOptions, sizeOptions]) => {\n      const [videoId, playerVars] = constructorOptions;\n      const [width, height] = sizeOptions;\n      return videoId ? {videoId, playerVars, width, height} : undefined;\n    }),\n  );\n\n  return combineLatest([youtubeContainer, playerOptions, of(ngZone)]).pipe(\n    skipUntilRememberLatest(iframeApiAvailableObs),\n    scan(syncPlayerState, undefined),\n    distinctUntilChanged(),\n  );\n}\n\n/** Skips the given observable until the other observable emits true, then emit the latest. */\nfunction skipUntilRememberLatest<T>(notifier: Observable<boolean>): MonoTypeOperatorFunction<T> {\n  return pipe(\n    combineLatestOp(notifier),\n    skipWhile(([_, doneSkipping]) => !doneSkipping),\n    map(([value]) => value),\n  );\n}\n\n/** Destroy the player if there are no options, or create the player if there are options. */\nfunction syncPlayerState(\n  player: UninitializedPlayer | undefined,\n  [container, videoOptions, ngZone]: [HTMLElement, YT.PlayerOptions | undefined, NgZone],\n): UninitializedPlayer | undefined {\n  if (player && videoOptions && player.playerVars !== videoOptions.playerVars) {\n    // The player needs to be recreated if the playerVars are different.\n    player.destroy();\n  } else if (!videoOptions) {\n    if (player) {\n      // Destroy the player if the videoId was removed.\n      player.destroy();\n    }\n    return;\n  } else if (player) {\n    return player;\n  }\n\n  // Important! We need to create the Player object outside of the `NgZone`, because it kicks\n  // off a 250ms setInterval which will continually trigger change detection if we don't.\n  const newPlayer: UninitializedPlayer = ngZone.runOutsideAngular(\n    () => new YT.Player(container, videoOptions),\n  );\n  newPlayer.videoId = videoOptions.videoId;\n  newPlayer.playerVars = videoOptions.playerVars;\n  return newPlayer;\n}\n\n/**\n * Call cueVideoById if the videoId changes, or when start or end seconds change. cueVideoById will\n * change the loaded video id to the given videoId, and set the start and end times to the given\n * start/end seconds.\n */\nfunction bindCueVideoCall(\n  playerObs: Observable<Player | undefined>,\n  videoIdObs: Observable<string | undefined>,\n  startSecondsObs: Observable<number | undefined>,\n  endSecondsObs: Observable<number | undefined>,\n  suggestedQualityObs: Observable<YT.SuggestedVideoQuality | undefined>,\n  destroyed: Observable<void>,\n) {\n  const cueOptionsObs = combineLatest([startSecondsObs, endSecondsObs]).pipe(\n    map(([startSeconds, endSeconds]) => ({startSeconds, endSeconds})),\n  );\n\n  // Only respond to changes in cue options if the player is not running.\n  const filteredCueOptions = cueOptionsObs.pipe(\n    filterOnOther(playerObs, player => !!player && !hasPlayerStarted(player)),\n  );\n\n  // If the video id changed, there's no reason to run 'cue' unless the player\n  // was initialized with a different video id.\n  const changedVideoId = videoIdObs.pipe(\n    filterOnOther(playerObs, (player, videoId) => !!player && player.videoId !== videoId),\n  );\n\n  // If the player changed, there's no reason to run 'cue' unless there are cue options.\n  const changedPlayer = playerObs.pipe(\n    filterOnOther(\n      combineLatest([videoIdObs, cueOptionsObs]),\n      ([videoId, cueOptions], player) =>\n        !!player &&\n        (videoId != player.videoId || !!cueOptions.startSeconds || !!cueOptions.endSeconds),\n    ),\n  );\n\n  merge(changedPlayer, changedVideoId, filteredCueOptions)\n    .pipe(\n      withLatestFrom(combineLatest([playerObs, videoIdObs, cueOptionsObs, suggestedQualityObs])),\n      map(([_, values]) => values),\n      takeUntil(destroyed),\n    )\n    .subscribe(([player, videoId, cueOptions, suggestedQuality]) => {\n      if (!videoId || !player) {\n        return;\n      }\n      player.videoId = videoId;\n      player.cueVideoById({\n        videoId,\n        suggestedQuality,\n        ...cueOptions,\n      });\n    });\n}\n\nfunction hasPlayerStarted(player: YT.Player): boolean {\n  const state = player.getPlayerState();\n  return state !== YT.PlayerState.UNSTARTED && state !== YT.PlayerState.CUED;\n}\n\nfunction playerIsReady(player: UninitializedPlayer): player is Player {\n  return 'getPlayerStatus' in player;\n}\n\n/** Combines the two observables temporarily for the filter function. */\nfunction filterOnOther<R, T>(\n  otherObs: Observable<T>,\n  filterFn: (t: T, r?: R) => boolean,\n): MonoTypeOperatorFunction<R> {\n  return pipe(\n    withLatestFrom(otherObs),\n    filter(([value, other]) => filterFn(other, value)),\n    map(([value]) => value),\n  );\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {YouTubePlayer} from './youtube-player';\n\nconst COMPONENTS = [YouTubePlayer];\n\n@NgModule({\n  declarations: COMPONENTS,\n  exports: COMPONENTS,\n})\nexport class YouTubePlayerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './youtube-module';\nexport {YouTubePlayer} from './youtube-player';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["observableOf","combineLatestOp"],"mappings":"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"}